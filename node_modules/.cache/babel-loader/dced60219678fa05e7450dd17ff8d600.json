{"ast":null,"code":"import _slicedToArray from \"/home/jishnu/Documents/HTML/infin8_2020/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jishnu/Documents/HTML/infin8_2020/src/components/sections/Location.js\";\nimport React, { useState } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport * as parkDate from \"./map/data.json\";\nimport '../css/Location.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nexport default function App() {\n  const _useState = useState({\n    latitude: 12.8447999,\n    longitude: 77.66323896266928,\n    width: \"100%\",\n    height: \"50vh\",\n    zoom: 15\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewport = _useState2[0],\n        setViewport = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedPark = _useState4[0],\n        setSelectedPark = _useState4[1];\n\n  return React.createElement(\"div\", {\n    className: \"Map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoiYWdhbS1rYXNoeWFwIiwiYSI6ImNrNHBvMGR6ejBodGUzbHAxNjR5ODN3a28ifQ.nOBYQvNGFZgXlMhMum9QHQ\",\n    mapStyle: \"mapbox://styles/agam-kashyap/ck4ppvyzc40xg1dqlnra1aki9\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), parkDate.features.map(park => React.createElement(Marker, {\n    key: park.properties.PARK_ID,\n    latitude: park.geometry.coordinates[0],\n    longitude: park.geometry.coordinates[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n      console.log(\"hello\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))), selectedPark ? React.createElement(Popup, {\n    latitude: selectedPark.geometry.coordinates[1],\n    longitude: selectedPark.geometry.coordinates[0],\n    onClose: () => {\n      setSelectedPark(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, selectedPark.properties.NAME), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, selectedPark.properties.DESCRIPTION))) : null));\n}","map":{"version":3,"sources":["/home/jishnu/Documents/HTML/infin8_2020/src/components/sections/Location.js"],"names":["React","useState","ReactMapGL","Marker","Popup","parkDate","App","latitude","longitude","width","height","zoom","viewport","setViewport","selectedPark","setSelectedPark","features","map","park","properties","PARK_ID","geometry","coordinates","e","preventDefault","console","log","NAME","DESCRIPTION"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,cAA1C;AACA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;AACA,OAAO,qBAAP;AACA,OAAO,8BAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,oBACIL,QAAQ,CAAC;AACvCM,IAAAA,QAAQ,EAAE,UAD6B;AAEvCC,IAAAA,SAAS,EAAE,iBAF4B;AAGvCC,IAAAA,KAAK,EAAE,MAHgC;AAIvCC,IAAAA,MAAM,EAAE,MAJ+B;AAKvCC,IAAAA,IAAI,EAAE;AALiC,GAAD,CADZ;AAAA;AAAA,QACrBC,QADqB;AAAA,QACXC,WADW;;AAAA,qBASYZ,QAAQ,CAAC,IAAD,CATpB;AAAA;AAAA,QASrBa,YATqB;AAAA,QASPC,eATO;;AAW5B,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,oBACMH,QADN;AAEE,IAAA,oBAAoB,EAAC,kGAFvB;AAGE,IAAA,QAAQ,EAAC,wDAHX;AAIE,IAAA,gBAAgB,EAAEA,QAAQ,IAAI;AAAEC,MAAAA,WAAW,CAACD,QAAD,CAAX;AAAwB,KAJ1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGP,QAAQ,CAACW,QAAT,CAAkBC,GAAlB,CAAsBC,IAAI,IACvB,oBAAC,MAAD;AACI,IAAA,GAAG,EAAEA,IAAI,CAACC,UAAL,CAAgBC,OADzB;AAEI,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAFd;AAGI,IAAA,SAAS,EAAEJ,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKA;AAAQ,IAAA,OAAO,EAAEC,CAAC,IAAI;AAACA,MAAAA,CAAC,CAACC,cAAF;AAAmBT,MAAAA,eAAe,CAACG,IAAD,CAAf;AAAuBO,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAqB,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CADH,CANH,EAgBGZ,YAAY,GACX,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAEA,YAAY,CAACO,QAAb,CAAsBC,WAAtB,CAAkC,CAAlC,CADZ;AAEE,IAAA,SAAS,EAAER,YAAY,CAACO,QAAb,CAAsBC,WAAtB,CAAkC,CAAlC,CAFb;AAGE,IAAA,OAAO,EAAE,MAAM;AAAEP,MAAAA,eAAe,CAAC,IAAD,CAAf;AAAwB,KAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,YAAY,CAACK,UAAb,CAAwBQ,IAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIb,YAAY,CAACK,UAAb,CAAwBS,WAA5B,CAFF,CALF,CADW,GAWT,IA3BN,CADF,CADF;AAiCD","sourcesContent":["import React, { useState } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport * as parkDate from \"./map/data.json\";\nimport '../css/Location.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nexport default function App() {\n  const [viewport, setViewport] = useState({\n    latitude: 12.8447999, \n    longitude: 77.66323896266928,\n    width: \"100%\",\n    height: \"50vh\",\n    zoom: 15,\n  });\n\n  const [selectedPark, setSelectedPark] = useState(null);\n\n  return (\n    <div className=\"Map\">\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiYWdhbS1rYXNoeWFwIiwiYSI6ImNrNHBvMGR6ejBodGUzbHAxNjR5ODN3a28ifQ.nOBYQvNGFZgXlMhMum9QHQ\"\n        mapStyle=\"mapbox://styles/agam-kashyap/ck4ppvyzc40xg1dqlnra1aki9\"\n        onViewportChange={viewport => { setViewport(viewport); }}\n      >\n        {parkDate.features.map(park => (\n            <Marker\n                key={park.properties.PARK_ID}\n                latitude={park.geometry.coordinates[0]}\n                longitude={park.geometry.coordinates[1]}\n            >\n            <button onClick={e => {e.preventDefault();setSelectedPark(park); console.log(\"hello\")}}></button>\n            </Marker>\n        ))}\n\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.geometry.coordinates[1]}\n            longitude={selectedPark.geometry.coordinates[0]}\n            onClose={() => { setSelectedPark(null); }}\n          >\n            <div>\n              <h2>{selectedPark.properties.NAME}</h2>\n              <p>{selectedPark.properties.DESCRIPTION}</p>\n            </div>\n          </Popup>\n        ) : null}\n      </ReactMapGL>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}